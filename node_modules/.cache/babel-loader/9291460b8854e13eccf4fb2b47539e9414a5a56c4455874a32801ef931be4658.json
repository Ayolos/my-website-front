{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-row justify-start sm:justify-center gap-4 items-center\"\n};\nconst _hoisted_2 = {\n  class: \"text-sm text-gray-400\"\n};\nimport { onMounted, ref } from 'vue';\nimport { gsap } from 'gsap';\nexport default {\n  __name: 'KPIText',\n  props: {\n    number: {\n      type: String,\n      required: true\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    align: {\n      type: String,\n      default: 'center'\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const numberElement = ref(null);\n    onMounted(() => {\n      gsap.from(numberElement.value, {\n        innerText: 0,\n        duration: 1.5,\n        snap: {\n          innerText: 1\n        }\n      });\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n        ref_key: \"numberElement\",\n        ref: numberElement,\n        class: \"text-6xl font-bold text-white number-animation\"\n      }, _toDisplayString(props.number), 513), _createElementVNode(\"p\", _hoisted_2, _toDisplayString(props.text), 1)]);\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","gsap","props","__props","numberElement","from","value","innerText","duration","snap"],"sources":["/Users/ayo/WebstormProjects/test/client/src/components/KPIText.vue"],"sourcesContent":["<script setup>\nimport {defineProps, onMounted, ref} from 'vue';\nimport { gsap } from 'gsap';\n\nconst props = defineProps(\n    {\n        number: {\n            type: String,\n            required: true\n        },\n        text: {\n            type: String,\n            required: true\n        },\n        align: {\n            type: String,\n            default: 'center'\n        }\n    }\n);\n\nconst numberElement = ref(null);\n\nonMounted(() => {\n  gsap.from(numberElement.value, {\n    innerText: 0,\n    duration: 1.5,\n    snap: {\n      innerText: 1\n    }\n  });\n});\n</script>\n\n<template>\n  <div class=\"flex flex-row justify-start sm:justify-center gap-4 items-center\">\n    <p ref=\"numberElement\" class=\"text-6xl font-bold text-white number-animation\">\n      {{ props.number }}\n    </p>\n    <p class=\"text-sm text-gray-400\">\n      {{ props.text }}\n    </p>\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":";;;;;;;AACA,SAAqBA,SAAS,EAAEC,GAAG,QAAO,KAAK;AAC/C,SAASC,IAAI,QAAQ,MAAM;;;;;;;;;;;;;;;;;;IAE3B,MAAMC,KAAK,GAAGC,OAeb;IAED,MAAMC,aAAa,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAE/BD,SAAS,CAAC,MAAM;MACdE,IAAI,CAACI,IAAI,CAACD,aAAa,CAACE,KAAK,EAAE;QAC7BC,SAAS,EAAE,CAAC;QACZC,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE;UACJF,SAAS,EAAE;QACb;MACF,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}