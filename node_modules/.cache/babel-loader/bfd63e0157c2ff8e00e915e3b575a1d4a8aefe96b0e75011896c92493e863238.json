{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport { computed } from 'vue';\nexport default {\n  __name: 'NavText',\n  props: {\n    text: {\n      type: String,\n      required: true\n    },\n    path: {\n      type: String,\n      required: true\n    },\n    size: {\n      type: String,\n      default: 'sm'\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const sizeClass = computed(() => {\n      if (props.size === 'sm') {\n        return 'text-sm';\n      } else if (props.size === 'md') {\n        return 'text-md';\n      } else if (props.size === 'lg') {\n        return 'text-lg';\n      } else {\n        return 'text-sm';\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_router_link = _resolveComponent(\"router-link\");\n      return _openBlock(), _createBlock(_component_router_link, {\n        \"active-class\": \"pb-1 border-b-2 border-pink-500 text-pink-500\",\n        to: props.path,\n        class: _normalizeClass([sizeClass.value, \"hover:text-pink-500\"])\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(props.text), 1)]),\n        _: 1\n      }, 8, [\"to\", \"class\"]);\n    };\n  }\n};","map":{"version":3,"names":["computed","props","__props","sizeClass","size"],"sources":["/Users/ayo/WebstormProjects/test/client/src/components/nav/NavText.vue"],"sourcesContent":["<script setup>\nimport {computed, defineProps} from 'vue';\n\nconst props = defineProps(\n    {\n        text: {\n            type: String,\n            required: true\n        },\n        path: {\n            type: String,\n            required: true\n        },\n        size: {\n            type: String,\n            default: 'sm'\n        }\n    }\n);\n\nconst sizeClass = computed(() => {\n    if (props.size === 'sm') {\n        return 'text-sm';\n    } else if (props.size === 'md') {\n        return 'text-md';\n    } else if (props.size === 'lg') {\n        return 'text-lg';\n    }else {\n        return 'text-sm';\n    }\n});\n</script>\n\n<template>\n  <router-link\n      active-class=\"pb-1 border-b-2 border-pink-500 text-pink-500\"\n      :to=\"props.path\"\n      :class=\"sizeClass\"\n      class=\"hover:text-pink-500\"\n  >{{ props.text }}</router-link>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":";AACA,SAAQA,QAAqB,QAAO,KAAK;;;;;;;;;;;;;;;;;;IAEzC,MAAMC,KAAK,GAAGC,OAeb;IAED,MAAMC,SAAS,GAAGH,QAAQ,CAAC,MAAM;MAC7B,IAAIC,KAAK,CAACG,IAAI,KAAK,IAAI,EAAE;QACrB,OAAO,SAAS;MACpB,CAAC,MAAM,IAAIH,KAAK,CAACG,IAAI,KAAK,IAAI,EAAE;QAC5B,OAAO,SAAS;MACpB,CAAC,MAAM,IAAIH,KAAK,CAACG,IAAI,KAAK,IAAI,EAAE;QAC5B,OAAO,SAAS;MACpB,CAAC,MAAK;QACF,OAAO,SAAS;MACpB;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}