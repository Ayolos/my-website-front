{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { h, defineComponent } from 'vue';\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\nconst defaultIconDimensions = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16\n});\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  const resolved = /* @__PURE__ */Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(icons[name2] || aliases[name2], currentProps);\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n  return data;\n}\nconst dataStorage = /* @__PURE__ */Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = {\n        ...icon\n      };\n      return true;\n    }\n  } catch (err) {}\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach(provider2 => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach(prefix2 => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(Object.keys(storage.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name));\n    });\n  });\n  return allIcons;\n}\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\nconst isUnsetKeyword = value => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(body, '<g transform=\"' + transformations.join(\" \") + '\">', \"</g>\");\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n    // Allowed characters before id: [#;\"]\n    // Allowed characters after id: [)\"], .[a-z]\n    new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + suffix + \"$3\");\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\nconst storage = /* @__PURE__ */Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\nfunction removeCallback(storages, id) {\n  storages.forEach(storage => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter(row => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(storage => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find(value => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\nfunction emptyCallback$1() {}\nconst redundancyCache = /* @__PURE__ */Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\nconst browserStorageLimit = 50;\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {}\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {}\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {}\n}\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */new Set(),\n  session: /* @__PURE__ */new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n  browserStorageConfig[key] = false;\n}\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = index => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" &&\n      // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {}\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, item => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(provider, prefix);\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n  // Matches or newer\n  lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, item => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(func, browserCachePrefix + index.toString(), JSON.stringify(item));\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\nfunction emptyCallback() {}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const {\n        provider,\n        prefix\n      } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, data => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach(name => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach(name => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix\n    } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix,\n      name\n    } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(storage => {\n    const {\n      provider,\n      prefix\n    } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\nconst defaultExtendedIconCustomisations = {\n  ...defaultIconCustomisations,\n  inline: false\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img'\n};\n/**\n * Style modes\n */\nconst commonProps = {\n  display: 'inline-block'\n};\nconst monotoneProps = {\n  backgroundColor: 'currentColor'\n};\nconst coloredProps = {\n  backgroundColor: 'transparent'\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n  Image: 'var(--svg)',\n  Repeat: 'no-repeat',\n  Size: '100% 100%'\n};\nconst propsToAddTo = {\n  webkitMask: monotoneProps,\n  mask: monotoneProps,\n  background: coloredProps\n};\nfor (const prefix in propsToAddTo) {\n  const list = propsToAddTo[prefix];\n  for (const prop in propsToAdd) {\n    list[prefix + prop] = propsToAdd[prop];\n  }\n}\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach(prefix => {\n  const attr = prefix.slice(0, 1) + 'Flip';\n  // vertical-flip\n  customisationAliases[prefix + '-flip'] = attr;\n  // v-flip\n  customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n  // verticalFlip\n  customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n  return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon,\n// Partial properties\nprops) => {\n  // Split properties\n  const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n  const componentProps = {\n    ...svgDefaults\n  };\n  // Check mode\n  const mode = props.mode || 'svg';\n  // Copy style\n  const style = {};\n  const propsStyle = props.style;\n  const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array) ? propsStyle : {};\n  // Get element properties\n  for (let key in props) {\n    const value = props[key];\n    if (value === void 0) {\n      continue;\n    }\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'onLoad':\n      case 'mode':\n        break;\n      // Boolean attributes\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n        break;\n      // Color: override style\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n        break;\n      // Remove aria-hidden\n      case 'ariaHidden':\n      case 'aria-hidden':\n        // Vue transforms 'aria-hidden' property to 'ariaHidden'\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n        break;\n      default:\n        {\n          const alias = customisationAliases[key];\n          if (alias) {\n            // Aliases for boolean customisations\n            if (value === true || value === 'true' || value === 1) {\n              customisations[alias] = true;\n            }\n          } else if (defaultExtendedIconCustomisations[key] === void 0) {\n            // Copy missing property if it does not exist in customisations\n            componentProps[key] = value;\n          }\n        }\n    }\n  }\n  // Generate icon\n  const item = iconToSVG(icon, customisations);\n  const renderAttribs = item.attributes;\n  // Inline display\n  if (customisations.inline) {\n    style.verticalAlign = '-0.125em';\n  }\n  if (mode === 'svg') {\n    // Add style\n    componentProps.style = {\n      ...style,\n      ...customStyle\n    };\n    // Add icon stuff\n    Object.assign(componentProps, renderAttribs);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n      // Convert '-' to '_' to avoid errors in animations\n      id = id.replace(/-/g, '_');\n    }\n    // Add innerHTML and style to props\n    componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n    // Render icon\n    return h('svg', componentProps);\n  }\n  // Render <span> with style\n  const {\n    body,\n    width,\n    height\n  } = icon;\n  const useMask = mode === 'mask' || (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n  // Generate SVG\n  const html = iconToHTML(body, {\n    ...renderAttribs,\n    width: width + '',\n    height: height + ''\n  });\n  // Generate style\n  componentProps.style = {\n    ...style,\n    '--svg': svgToURL(html),\n    'width': fixSize(renderAttribs.width),\n    'height': fixSize(renderAttribs.height),\n    ...commonProps,\n    ...(useMask ? monotoneProps : coloredProps),\n    ...customStyle\n  };\n  return h('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n  toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n  toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  initBrowserStorage();\n  const _window = window;\n  // Load icons from global \"IconifyPreload\"\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if (\n          // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array ||\n          // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' ||\n          // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  }\n  // Set API from global \"IconifyProviders\"\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n        try {\n          const value = providers[key];\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = {\n  ...defaultIconProps,\n  body: ''\n};\nconst Icon = defineComponent({\n  // Do not inherit other attributes: it is handled by render()\n  inheritAttrs: false,\n  // Set initial data\n  data() {\n    return {\n      // Current icon name\n      _name: '',\n      // Loading\n      _loadingIcon: null,\n      // Mounted status\n      iconMounted: false,\n      // Callback counter to trigger re-render\n      counter: 0\n    };\n  },\n  mounted() {\n    // Mark as mounted\n    this.iconMounted = true;\n  },\n  unmounted() {\n    this.abortLoading();\n  },\n  methods: {\n    abortLoading() {\n      if (this._loadingIcon) {\n        this._loadingIcon.abort();\n        this._loadingIcon = null;\n      }\n    },\n    // Get data for icon to render or null\n    getIcon(icon, onload) {\n      // Icon is an object\n      if (typeof icon === 'object' && icon !== null && typeof icon.body === 'string') {\n        // Stop loading\n        this._name = '';\n        this.abortLoading();\n        return {\n          data: icon\n        };\n      }\n      // Invalid icon?\n      let iconName;\n      if (typeof icon !== 'string' || (iconName = stringToIcon(icon, false, true)) === null) {\n        this.abortLoading();\n        return null;\n      }\n      // Load icon\n      const data = getIconData(iconName);\n      if (!data) {\n        // Icon data is not available\n        if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n          // New icon to load\n          this.abortLoading();\n          this._name = '';\n          if (data !== null) {\n            // Icon was not loaded\n            this._loadingIcon = {\n              name: icon,\n              abort: loadIcons([iconName], () => {\n                this.counter++;\n              })\n            };\n          }\n        }\n        return null;\n      }\n      // Icon data is available\n      this.abortLoading();\n      if (this._name !== icon) {\n        this._name = icon;\n        if (onload) {\n          onload(icon);\n        }\n      }\n      // Add classes\n      const classes = ['iconify'];\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      }\n      return {\n        data,\n        classes\n      };\n    }\n  },\n  // Render icon\n  render() {\n    // Re-render when counter changes\n    this.counter;\n    const props = this.$attrs;\n    // Get icon data\n    const icon = this.iconMounted || props.ssr ? this.getIcon(props.icon, props.onLoad) : null;\n    // Validate icon object\n    if (!icon) {\n      return render(emptyIcon, props);\n    }\n    // Add classes\n    let newProps = props;\n    if (icon.classes) {\n      newProps = {\n        ...props,\n        class: (typeof props['class'] === 'string' ? props['class'] + ' ' : '') + icon.classes.join(' ')\n      };\n    }\n    // Render icon\n    return render({\n      ...defaultIconProps,\n      ...icon.data\n    }, newProps);\n  }\n});\n/**\n * Internal API\n */\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders\n};\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconLoaded as iconExists, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs };","map":{"version":3,"names":["h","defineComponent","matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconTransformations","obj1","obj2","mergeIconData","parent","child","key","getIconsTree","data","names","icons","aliases","create","resolved","resolve","concat","keys","forEach","internalGetIconData","tree","currentProps","parse","parseIconSet","callback","not_found","Array","push","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","addCollection","added","iconLoaded","getIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","splitSVGDefs","content","tag","defs","index","indexOf","start","end","endEnd","trim","mergeDefsAndContent","wrapSVGContent","isUnsetKeyword","iconToSVG","customisations","fullIcon","fullCustomisations","box","props","transformations","rotation","toString","tempValue","floor","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","regex","randomPrefix","Date","now","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","status","prepare","results","maxLength","type","getPath","send","params","iconsList","urlParams","URLSearchParams","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","removeCallback","storages","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","browserStorageLimit","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","setBrowserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","updateLastModified","lastValue","storeInBrowserStorage","store","set","delete","from","stringify","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","loadNewIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","pendingIcons","console","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon","Promise","fulfill","reject","iconObj","toggleBrowserCache","mergeCustomisations","valueType","separator","flipFromString","custom","flip","str","rotateFromString","defaultValue","units","value2","iconToHTML","renderAttribsHTML","encodeSVGforURL","svg","svgToData","svgToURL","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","webkitMask","mask","background","customisationAliases","fixSize","render","componentProps","mode","style","propsStyle","customStyle","color","alias","renderAttribs","verticalAlign","localCounter","useMask","html","enableCache","disableCache","document","IconifyPreload","preload","e","IconifyProviders","emptyIcon","Icon","inheritAttrs","_name","_loadingIcon","iconMounted","mounted","unmounted","abortLoading","methods","onload","classes","$attrs","ssr","onLoad","newProps","class","_api","buildIcon","iconExists"],"sources":["/Users/ayo/WebstormProjects/test/client/node_modules/@iconify/vue/dist/iconify.mjs"],"sourcesContent":["import { h, defineComponent } from 'vue';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconLoaded(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = wrapSVGContent(\n        body,\n        '<g transform=\"' + transformations.join(\" \") + '\">',\n        \"</g>\"\n      );\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  const viewBox = [box.left, box.top, boxWidth, boxHeight];\n  attributes.viewBox = viewBox.join(\" \");\n  return {\n    attributes,\n    viewBox,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\nconst browserStorageLimit = 50;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-flip must be renamed\n */\nconst customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    const attr = prefix.slice(0, 1) + 'Flip';\n    // vertical-flip\n    customisationAliases[prefix + '-flip'] = attr;\n    // v-flip\n    customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n    // verticalFlip\n    customisationAliases[prefix + 'Flip'] = attr;\n});\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n    const componentProps = { ...svgDefaults };\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Copy style\n    const style = {};\n    const propsStyle = props.style;\n    const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\n        ? propsStyle\n        : {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n            case 'mode':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default: {\n                const alias = customisationAliases[key];\n                if (alias) {\n                    // Aliases for boolean customisations\n                    if (value === true || value === 'true' || value === 1) {\n                        customisations[alias] = true;\n                    }\n                }\n                else if (defaultExtendedIconCustomisations[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n            }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add innerHTML and style to props\n        componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n        // Render icon\n        return h('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return h('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = {\n    ...defaultIconProps,\n    body: '',\n};\nconst Icon = defineComponent({\n    // Do not inherit other attributes: it is handled by render()\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Current icon name\n            _name: '',\n            // Loading\n            _loadingIcon: null,\n            // Mounted status\n            iconMounted: false,\n            // Callback counter to trigger re-render\n            counter: 0,\n        };\n    },\n    mounted() {\n        // Mark as mounted\n        this.iconMounted = true;\n    },\n    unmounted() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: icon,\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (!data) {\n                // Icon data is not available\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    if (data !== null) {\n                        // Icon was not loaded\n                        this._loadingIcon = {\n                            name: icon,\n                            abort: loadIcons([iconName], () => {\n                                this.counter++;\n                            }),\n                        };\n                    }\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render() {\n        // Re-render when counter changes\n        this.counter;\n        const props = this.$attrs;\n        // Get icon data\n        const icon = (this.iconMounted || props.ssr)\n            ? this.getIcon(props.icon, props.onLoad)\n            : null;\n        // Validate icon object\n        if (!icon) {\n            return render(emptyIcon, props);\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                class: (typeof props['class'] === 'string'\n                    ? props['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconLoaded as iconExists, iconLoaded, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}