{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, Transition as _Transition } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex lg:flex-row flex-col items-center h-full relative\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"absolute p-2 inset-0 transition-opacity text-center h-full text-2xl flex items-center justify-center duration-500\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"flex flex-col gap-6 justify-between h-full lg:h-auto\"\n};\nconst _hoisted_4 = {\n  class: \"p-8 flex flex-col gap-8\"\n};\nconst _hoisted_5 = {\n  class: \"flex flex-col gap-4\"\n};\nconst _hoisted_6 = {\n  class: \"text-white text-2xl\"\n};\nconst _hoisted_7 = {\n  class: \"text-sm text-gray-500\"\n};\nconst _hoisted_8 = [\"href\"];\nconst _hoisted_9 = {\n  class: \"flex flex-row gap-4 lg:flex-nowrap flex-wrap\"\n};\nimport { computed, ref, onMounted } from 'vue';\nimport BadgeItem from \"@/components/BadgeItem.vue\";\n\n// Props pour passer les données du projet\n\nexport default {\n  __name: 'ProjectCard',\n  props: {\n    cardIndex: Number,\n    expandedCard: Number,\n    toggleExpand: Function,\n    title: String,\n    description: String,\n    badges: Array,\n    githubLink: String,\n    bgColor: String\n  },\n  setup(__props) {\n    const props = __props;\n\n    // Etat pour déterminer la taille de l'écran\n    const isLgScreen = ref(window.innerWidth >= 1024);\n\n    // Mettre à jour la taille de l'écran en cas de redimensionnement\n    const updateScreenSize = () => {\n      isLgScreen.value = window.innerWidth >= 1024;\n    };\n\n    // Attacher un écouteur d'événements pour suivre la taille de l'écran\n    onMounted(() => {\n      window.addEventListener('resize', updateScreenSize);\n    });\n\n    // Calcul de la classe dynamique pour le style\n    const isExpanded = computed(() => isLgScreen.value ? props.expandedCard === props.cardIndex : true); // Always expanded on smaller screens\n    const cardClasses = computed(() => ['z-0 shadow-2xl rounded-2xl cursor-pointer text-white transition-all duration-700 ease-in-out overflow-hidden', isLgScreen.value ? isExpanded.value ? 'flex-grow-[8]' : 'flex-grow-[1]' : 'flex-grow-[1]', isLgScreen.value && props.expandedCard ? 'w-1/5' : 'w-full']);\n\n    // Fonction toggleExpand modifiée\n    const handleToggleExpand = () => {\n      // Désactiver le système d'expand pour les petits écrans\n      if (isLgScreen.value && (props.expandedCard !== props.cardIndex || props.expandedCard === null)) {\n        props.toggleExpand(props.cardIndex);\n      }\n    };\n\n    // Hooks de transition\n    const beforeEnter = el => {\n      el.style.opacity = 0; // Assure que l'élément commence invisible avant la transition\n    };\n    const enter = (el, done) => {\n      el.offsetHeight; // déclenche le reflow\n      el.style.opacity = 1; // commence à apparaître\n      done(); // termine la transition\n    };\n    const leave = (el, done) => {\n      el.style.opacity = 0; // commence à disparaître\n      setTimeout(done, 300); // durée de la transition\n    };\n    return (_ctx, _cache) => {\n      const _component_iconify_icon = _resolveComponent(\"iconify-icon\");\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([cardClasses.value, \"border border-neutral-700 max-lg:w-full\"]),\n        onClick: handleToggleExpand\n      }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"-z-50 absolute left-0 top-0 h-20 w-56\", __props.bgColor + ' rounded-full blur-3xl']),\n        style: {\n          \"transform\": \"translate3d(0, 0, 0)\"\n        }\n      }, null, 2), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"-z-50 absolute left-0 bottom-0 h-32 w-56\", __props.bgColor + ' rounded-full blur-3xl']),\n        style: {\n          \"transform\": \"translate3d(0, 0, 0)\"\n        }\n      }, null, 2), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"-z-50 absolute right-0 top-1/2 h-48 w-20\", __props.bgColor + ' rounded-full blur-3xl']),\n        style: {\n          \"transform\": \"translate3d(0, 0, 0)\"\n        }\n      }, null, 2), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n        class: \"-z-40 absolute inset-0 bg-background-light/50 backdrop-blur\"\n      }, null, -1)), !isExpanded.value && isLgScreen.value ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, _toDisplayString(__props.title), 1)) : _createCommentVNode(\"\", true), _createVNode(_Transition, {\n        name: \"fade\",\n        onBeforeEnter: beforeEnter,\n        onEnter: enter,\n        onLeave: leave\n      }, {\n        default: _withCtx(() => [isExpanded.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", _hoisted_6, _toDisplayString(__props.title), 1), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(__props.description), 1)]), __props.githubLink ? (_openBlock(), _createElementBlock(\"a\", {\n          key: 0,\n          href: __props.githubLink,\n          class: \"flex text-pink-500 transition duration-500 ease-in-out hover:scale-105 flex-row gap-2 items-center border rounded-full w-max p-1 border-pink-500 pr-4 pl-2 py-1\"\n        }, [_createVNode(_component_iconify_icon, {\n          icon: \"mdi:github\",\n          class: \"text-3xl\"\n        }), _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"Github\", -1))], 8, _hoisted_8)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.badges, (badge, index) => {\n          return _openBlock(), _createBlock(BadgeItem, {\n            key: index\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(badge), 1)]),\n            _: 2\n          }, 1024);\n        }), 128))])])])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      })])], 2);\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","BadgeItem","props","__props","isLgScreen","window","innerWidth","updateScreenSize","value","addEventListener","isExpanded","expandedCard","cardIndex","cardClasses","handleToggleExpand","toggleExpand","beforeEnter","el","style","opacity","enter","done","offsetHeight","leave","setTimeout"],"sources":["/Users/ayo/WebstormProjects/test/client/src/components/slider/ProjectCard.vue"],"sourcesContent":["<template>\n  <div :class=\"cardClasses\" class=\"border border-neutral-700 max-lg:w-full\" @click=\"handleToggleExpand\">\n    <div class=\"flex lg:flex-row flex-col items-center h-full relative\">\n      <div class=\"-z-50 absolute left-0 top-0 h-20 w-56\" :class=\"bgColor + ' rounded-full blur-3xl'\" style=\"transform: translate3d(0, 0, 0)\"></div>\n      <div class=\"-z-50 absolute left-0 bottom-0 h-32 w-56\" :class=\"bgColor + ' rounded-full blur-3xl'\" style=\"transform: translate3d(0, 0, 0)\"></div>\n      <div class=\"-z-50 absolute right-0 top-1/2 h-48 w-20\" :class=\"bgColor + ' rounded-full blur-3xl'\" style=\"transform: translate3d(0, 0, 0)\"></div>\n      <div class=\"-z-40 absolute inset-0 bg-background-light/50 backdrop-blur\"></div>\n\n      <!-- Titre affiché lorsque la carte n'est pas étendue -->\n      <h2 v-if=\"!isExpanded && isLgScreen\" class=\"absolute p-2 inset-0 transition-opacity text-center h-full text-2xl flex items-center justify-center duration-500\">\n        {{ title }}\n      </h2>\n\n      <!-- Contenu affiché uniquement après la transition d'entrée -->\n      <transition\n          name=\"fade\"\n          @before-enter=\"beforeEnter\"\n          @enter=\"enter\"\n          @leave=\"leave\"\n      >\n        <div v-if=\"isExpanded\" class=\"flex flex-col gap-6 justify-between h-full lg:h-auto\">\n          <div class=\"p-8 flex flex-col gap-8\">\n            <div class=\"flex flex-col gap-4\">\n              <h2 class=\"text-white text-2xl\">{{ title }}</h2>\n              <p class=\"text-sm text-gray-500\">{{ description }}</p>\n            </div>\n            <a v-if=\"githubLink\" :href=\"githubLink\" class=\"flex text-pink-500 transition duration-500 ease-in-out hover:scale-105 flex-row gap-2 items-center border rounded-full w-max p-1 border-pink-500 pr-4 pl-2 py-1\">\n              <iconify-icon icon=\"mdi:github\" class=\"text-3xl\"></iconify-icon>\n              <p>Github</p>\n            </a>\n            <div class=\"flex flex-row gap-4 lg:flex-nowrap flex-wrap\">\n              <BadgeItem v-for=\"(badge, index) in badges\" :key=\"index\">{{ badge }}</BadgeItem>\n            </div>\n          </div>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineProps, ref, onMounted } from 'vue';\nimport BadgeItem from \"@/components/BadgeItem.vue\";\n\n// Props pour passer les données du projet\nconst props = defineProps({\n  cardIndex: Number,\n  expandedCard: Number,\n  toggleExpand: Function,\n  title: String,\n  description: String,\n  badges: Array,\n  githubLink: String,\n  bgColor: String\n});\n\n// Etat pour déterminer la taille de l'écran\nconst isLgScreen = ref(window.innerWidth >= 1024);\n\n// Mettre à jour la taille de l'écran en cas de redimensionnement\nconst updateScreenSize = () => {\n  isLgScreen.value = window.innerWidth >= 1024;\n};\n\n// Attacher un écouteur d'événements pour suivre la taille de l'écran\nonMounted(() => {\n  window.addEventListener('resize', updateScreenSize);\n});\n\n// Calcul de la classe dynamique pour le style\nconst isExpanded = computed(() => isLgScreen.value ? props.expandedCard === props.cardIndex : true); // Always expanded on smaller screens\nconst cardClasses = computed(() => [\n  'z-0 shadow-2xl rounded-2xl cursor-pointer text-white transition-all duration-700 ease-in-out overflow-hidden',\n  isLgScreen.value ? (isExpanded.value ? 'flex-grow-[8]' : 'flex-grow-[1]') : 'flex-grow-[1]',\n  isLgScreen.value && props.expandedCard ? 'w-1/5' : 'w-full'\n]);\n\n// Fonction toggleExpand modifiée\nconst handleToggleExpand = () => {\n  // Désactiver le système d'expand pour les petits écrans\n  if (isLgScreen.value && (props.expandedCard !== props.cardIndex || props.expandedCard === null)) {\n    props.toggleExpand(props.cardIndex);\n  }\n};\n\n// Hooks de transition\nconst beforeEnter = (el) => {\n  el.style.opacity = 0; // Assure que l'élément commence invisible avant la transition\n};\n\nconst enter = (el, done) => {\n  el.offsetHeight; // déclenche le reflow\n  el.style.opacity = 1; // commence à apparaître\n  done(); // termine la transition\n};\n\nconst leave = (el, done) => {\n  el.style.opacity = 0; // commence à disparaître\n  setTimeout(done, 300); // durée de la transition\n};\n</script>\n\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\n  opacity: 0;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,SAASA,QAAqB,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;;AAElD;;;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OASZ;;IAEF;IACA,MAAMC,UAAU,GAAGL,GAAG,CAACM,MAAM,CAACC,UAAU,IAAI,IAAI,CAAC;;IAEjD;IACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BH,UAAU,CAACI,KAAK,GAAGH,MAAM,CAACC,UAAU,IAAI,IAAI;IAC9C,CAAC;;IAED;IACAN,SAAS,CAAC,MAAM;MACdK,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAEF,gBAAgB,CAAC;IACrD,CAAC,CAAC;;IAEF;IACA,MAAMG,UAAU,GAAGZ,QAAQ,CAAC,MAAMM,UAAU,CAACI,KAAK,GAAGN,KAAK,CAACS,YAAY,KAAKT,KAAK,CAACU,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IACrG,MAAMC,WAAW,GAAGf,QAAQ,CAAC,MAAM,CACjC,8GAA8G,EAC9GM,UAAU,CAACI,KAAK,GAAIE,UAAU,CAACF,KAAK,GAAG,eAAe,GAAG,eAAe,GAAI,eAAe,EAC3FJ,UAAU,CAACI,KAAK,IAAIN,KAAK,CAACS,YAAY,GAAG,OAAO,GAAG,QAAQ,CAC5D,CAAC;;IAEF;IACA,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;MAC/B;MACA,IAAIV,UAAU,CAACI,KAAK,KAAKN,KAAK,CAACS,YAAY,KAAKT,KAAK,CAACU,SAAS,IAAIV,KAAK,CAACS,YAAY,KAAK,IAAI,CAAC,EAAE;QAC/FT,KAAK,CAACa,YAAY,CAACb,KAAK,CAACU,SAAS,CAAC;MACrC;IACF,CAAC;;IAED;IACA,MAAMI,WAAW,GAAIC,EAAE,IAAK;MAC1BA,EAAE,CAACC,KAAK,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,MAAMC,KAAK,GAAGA,CAACH,EAAE,EAAEI,IAAI,KAAK;MAC1BJ,EAAE,CAACK,YAAY,CAAC,CAAC;MACjBL,EAAE,CAACC,KAAK,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;MACtBE,IAAI,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;IAED,MAAME,KAAK,GAAGA,CAACN,EAAE,EAAEI,IAAI,KAAK;MAC1BJ,EAAE,CAACC,KAAK,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;MACtBK,UAAU,CAACH,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}