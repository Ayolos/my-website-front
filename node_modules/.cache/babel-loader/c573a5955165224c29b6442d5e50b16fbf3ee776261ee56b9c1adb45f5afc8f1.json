{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col gap-2 w-full\"\n};\nconst _hoisted_2 = [\"for\"];\nimport { computed } from 'vue';\nexport default {\n  __name: 'InputForm',\n  props: {\n    type: String,\n    modelValue: String // Update prop name for v-model\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit; // Define emit for v-model\n\n    const typeClass = computed(() => {\n      if (props.type === 'textarea') {\n        return 'h-48';\n      }\n      return '';\n    });\n\n    // Function to handle input change\n    const handleInput = event => {\n      emit('update:modelValue', event.target.value); // Emit updated value\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", {\n        for: props.value,\n        class: \"text-white text-sm\"\n      }, [_renderSlot(_ctx.$slots, \"default\")], 8, _hoisted_2), (_openBlock(), _createBlock(_resolveDynamicComponent(props.type === 'textarea' ? 'textarea' : 'input'), {\n        class: _normalizeClass([typeClass.value, \"bg-transparent resize-none text-gray-400 border border-neutral-600 focus:outline-none focus:ring-0 focus:border-pink-500 rounded-lg py-2 px-4\"]),\n        type: props.type,\n        id: props.value,\n        value: props.modelValue,\n        onInput: handleInput,\n        required: \"\"\n      }, null, 40, [\"class\", \"type\", \"id\", \"value\"]))]);\n    };\n  }\n};","map":{"version":3,"names":["computed","props","__props","emit","__emit","typeClass","type","handleInput","event","target","value"],"sources":["/Users/ayo/WebstormProjects/test/client/src/components/form/InputForm.vue"],"sourcesContent":["<script setup>\nimport { computed, defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n  type: String,\n  modelValue: String // Update prop name for v-model\n});\n\nconst emit = defineEmits(['update:modelValue']); // Define emit for v-model\n\nconst typeClass = computed(() => {\n  if (props.type === 'textarea') {\n    return 'h-48';\n  }\n  return '';\n});\n\n// Function to handle input change\nconst handleInput = (event) => {\n  emit('update:modelValue', event.target.value); // Emit updated value\n};\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2 w-full\">\n    <label :for=\"props.value\" class=\"text-white text-sm\">\n      <slot></slot>\n    </label>\n    <component\n        :is=\"props.type === 'textarea' ? 'textarea' : 'input'\"\n        :class=\"typeClass\"\n        class=\"bg-transparent resize-none text-gray-400 border border-neutral-600 focus:outline-none focus:ring-0 focus:border-pink-500 rounded-lg py-2 px-4\"\n        :type=\"props.type\"\n        :id=\"props.value\"\n        :value=\"props.modelValue\"\n        @input=\"handleInput\"\n    required\n    />\n  </div>\n</template>\n\n<style scoped>\n\n</style>\n"],"mappings":";;;;;AACA,SAASA,QAAkC,QAAQ,KAAK;;;;;;;;;;;IAExD,MAAMC,KAAK,GAAGC,OAGZ;IAEF,MAAMC,IAAI,GAAGC,MAAkC,CAAC,CAAC;;IAEjD,MAAMC,SAAS,GAAGL,QAAQ,CAAC,MAAM;MAC/B,IAAIC,KAAK,CAACK,IAAI,KAAK,UAAU,EAAE;QAC7B,OAAO,MAAM;MACf;MACA,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;MAC7BL,IAAI,CAAC,mBAAmB,EAAEK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}